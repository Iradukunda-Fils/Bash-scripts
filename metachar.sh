#!/bin/bash
# -------------------------------------
# Bash Tutorial: Special Characters and Symbols
# Created for teaching via YouTube
# -------------------------------------

# 1Ô∏è‚É£ Comment Symbol - Everything after '#' is ignored by the shell
# This line does nothing ‚Äî just a comment.

echo "‚û°Ô∏è  1. This is a regular echo command."  # Inline comment after code

# 2Ô∏è‚É£ Shebang (#!) - tells the system which interpreter to use
# Already defined at the top: #!/bin/bash

# 3Ô∏è‚É£ Variable and Value Reference with $
name="Ghost"
echo "‚û°Ô∏è  2. Hello, $name"

# Using ${} for clarity when combining with text
file="report"
echo "‚û°Ô∏è  3. File name: ${file}.txt"

# 4Ô∏è‚É£ Command Substitution: $(...)
current_date=$(date)
echo "‚û°Ô∏è  4. Current date is: $current_date"

# 5Ô∏è‚É£ Negation using ! in conditions
echo "‚û°Ô∏è  5. Testing negation:"
if [ ! -f "ghost.txt" ]; then
  echo "  üîé 'ghost.txt' does NOT exist"
fi

# 6Ô∏è‚É£ Globbing: *, ?, []
echo "‚û°Ô∏è  6. Matching files:"
touch file1.txt file2.txt fileA.txt
echo "  * All .txt files: $(ls *.txt)"
echo "  ? Matches one character: $(ls file?.txt)"
echo "  [] Matches specific chars: $(ls file[12].txt)"

# 7Ô∏è‚É£ Logical Operators: &&, ||, ;
echo "‚û°Ô∏è  7. Logical Operators:"
mkdir test_dir && echo "  ‚úÖ test_dir created"
mkdir test_dir || echo "  ‚ùå Already exists"
echo "  üëã Hello"; echo "  üåç World"  # runs both always

# 8Ô∏è‚É£ Test with [ ]
echo "‚û°Ô∏è  8. Numeric comparison:"
a=5
b=10
if [ $a -lt $b ]; then
  echo "  $a is less than $b"
fi

# 9Ô∏è‚É£ Redirections: >, >>, 2>, &>
echo "‚û°Ô∏è  9. Redirection Examples:"
echo "First line" > output.txt
echo "Second line" >> output.txt
ls notfound 2> error.log
echo "Both stdout and stderr" &> both.log

# 1Ô∏è‚É£0Ô∏è‚É£ Grouping Commands
echo "‚û°Ô∏è  10. Grouping:"
{ echo "Grouped A"; echo "Grouped B"; } > group.txt

# Subshell
echo "‚û°Ô∏è  11. Subshell:"
(pwd; echo "Inside subshell")

# 1Ô∏è‚É£1Ô∏è‚É£ Brace Expansion
echo "‚û°Ô∏è  12. Brace Expansion:"
echo file{A,B,C}.txt  # fileA.txt fileB.txt fileC.txt

# 1Ô∏è‚É£2Ô∏è‚É£ Array Length and Pattern Removal
filename="archive_backup_2024.zip"
echo "‚û°Ô∏è  13. Length of string: ${#filename}"
echo "Remove prefix: ${filename#archive_}"
echo "Remove suffix: ${filename%.zip}"

# 1Ô∏è‚É£3Ô∏è‚É£ Positional Parameters and Special Variables
echo "‚û°Ô∏è  14. Special variables:"

echo "Script name: $0"
echo "1st arg: $1"
echo "All args: $@"
echo "Number of args: $#"
echo "Exit code of last command: $?"

# 1Ô∏è‚É£4Ô∏è‚É£ Color Output
echo -e "\e[32m‚úÖ Success message\e[0m"
echo -e "\e[31m‚ùå Error message\e[0m"

# Cleanup
rm file1.txt file2.txt fileA.txt group.txt output.txt error.log both.log
rmdir test_dir

echo "üéì Bash symbols tutorial completed!"
